/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SsrBugIdImport } from './routes/ssr-bug.$id'
import { Route as ObjectsObjectIdImport } from './routes/objects.$objectId'
import { Route as ObjectsObjectIdRecordIdImport } from './routes/objects.$objectId.$recordId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SsrBugIdRoute = SsrBugIdImport.update({
  id: '/ssr-bug/$id',
  path: '/ssr-bug/$id',
  getParentRoute: () => rootRoute,
} as any)

const ObjectsObjectIdRoute = ObjectsObjectIdImport.update({
  id: '/objects/$objectId',
  path: '/objects/$objectId',
  getParentRoute: () => rootRoute,
} as any)

const ObjectsObjectIdRecordIdRoute = ObjectsObjectIdRecordIdImport.update({
  id: '/$recordId',
  path: '/$recordId',
  getParentRoute: () => ObjectsObjectIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/objects/$objectId': {
      id: '/objects/$objectId'
      path: '/objects/$objectId'
      fullPath: '/objects/$objectId'
      preLoaderRoute: typeof ObjectsObjectIdImport
      parentRoute: typeof rootRoute
    }
    '/ssr-bug/$id': {
      id: '/ssr-bug/$id'
      path: '/ssr-bug/$id'
      fullPath: '/ssr-bug/$id'
      preLoaderRoute: typeof SsrBugIdImport
      parentRoute: typeof rootRoute
    }
    '/objects/$objectId/$recordId': {
      id: '/objects/$objectId/$recordId'
      path: '/$recordId'
      fullPath: '/objects/$objectId/$recordId'
      preLoaderRoute: typeof ObjectsObjectIdRecordIdImport
      parentRoute: typeof ObjectsObjectIdImport
    }
  }
}

// Create and export the route tree

interface ObjectsObjectIdRouteChildren {
  ObjectsObjectIdRecordIdRoute: typeof ObjectsObjectIdRecordIdRoute
}

const ObjectsObjectIdRouteChildren: ObjectsObjectIdRouteChildren = {
  ObjectsObjectIdRecordIdRoute: ObjectsObjectIdRecordIdRoute,
}

const ObjectsObjectIdRouteWithChildren = ObjectsObjectIdRoute._addFileChildren(
  ObjectsObjectIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/objects/$objectId': typeof ObjectsObjectIdRouteWithChildren
  '/ssr-bug/$id': typeof SsrBugIdRoute
  '/objects/$objectId/$recordId': typeof ObjectsObjectIdRecordIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/objects/$objectId': typeof ObjectsObjectIdRouteWithChildren
  '/ssr-bug/$id': typeof SsrBugIdRoute
  '/objects/$objectId/$recordId': typeof ObjectsObjectIdRecordIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/objects/$objectId': typeof ObjectsObjectIdRouteWithChildren
  '/ssr-bug/$id': typeof SsrBugIdRoute
  '/objects/$objectId/$recordId': typeof ObjectsObjectIdRecordIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/objects/$objectId'
    | '/ssr-bug/$id'
    | '/objects/$objectId/$recordId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/objects/$objectId'
    | '/ssr-bug/$id'
    | '/objects/$objectId/$recordId'
  id:
    | '__root__'
    | '/'
    | '/objects/$objectId'
    | '/ssr-bug/$id'
    | '/objects/$objectId/$recordId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ObjectsObjectIdRoute: typeof ObjectsObjectIdRouteWithChildren
  SsrBugIdRoute: typeof SsrBugIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ObjectsObjectIdRoute: ObjectsObjectIdRouteWithChildren,
  SsrBugIdRoute: SsrBugIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/objects/$objectId",
        "/ssr-bug/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/objects/$objectId": {
      "filePath": "objects.$objectId.tsx",
      "children": [
        "/objects/$objectId/$recordId"
      ]
    },
    "/ssr-bug/$id": {
      "filePath": "ssr-bug.$id.tsx"
    },
    "/objects/$objectId/$recordId": {
      "filePath": "objects.$objectId.$recordId.tsx",
      "parent": "/objects/$objectId"
    }
  }
}
ROUTE_MANIFEST_END */
